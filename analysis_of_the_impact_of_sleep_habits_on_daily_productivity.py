# -*- coding: utf-8 -*-
"""Analysis of the Impact of Sleep Habits on Daily Productivity.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19t2yl6Ns2Z7xmWWZpt0MMv4LSsZ1wAhi
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt


df = pd.read_csv("/content/Expanded_Sleep_and_Productivity_Dataset.csv")

df.head()

df.drop(['Bedtime_Hour', 'Wakeup_Hour'], axis=1)

print(df.describe())

print(df.info())

print(df.shape)

df.isna().any()

print(df.isna().sum())

plt.figure(figsize=(8,6))
plt.boxplot(df['Caffeine_Intake_mg'])
plt.title('Boxplot of Caffeine Intake')
plt.ylabel('Caffeine Intake (mg)')
plt.show()

plt.figure(figsize=(8,4))
df.plot(x='Caffeine_Intake_mg', y='Daily_Productivity_Score',kind='scatter')
plt.title('Caffeine Intake vs Productivity Score')
plt.xlabel('Caffeine Intake (mg)')
plt.ylabel('Productivity Score')
plt.show()

plt.figure(figsize=(8,4))
plt.hist(df['Caffeine_Intake_mg'], bins=30, color='purple')
plt.title('Histogram of Caffeine Intake')
plt.xlabel('Caffeine Intake (mg)')
plt.ylabel('Frequency')
plt.show()

plt.figure(figsize=(8,4))
plt.hist(df['Sleep_Hours'], bins=30, color='blue')
plt.title('Histogram of Sleep Hours')
plt.xlabel('Sleep Hours')
plt.ylabel('Frequency')
plt.show()

plt.figure(figsize=(10,4))
df[['Sleep_Hours', 'Caffeine_Intake_mg', 'Electronic_Use_before_Bed_hrs']].boxplot()
plt.title('Boxplot of Sleep Hours, Caffeine Intake, and Electronic Use')
plt.ylabel('Values')
plt.show()

# استبدال القيم المفقودة في عدد ساعات النوم والإنتاجية بالمتوسط
df['Sleep_Hours'].fillna(df['Sleep_Hours'].mean(), inplace=True)
df['Daily_Productivity_Score'].fillna(df['Daily_Productivity_Score'].mean(), inplace=True)

# التحقق من القيم السالبة في جميع الأعمدة
negative_values = (df < 0).any()

# عرض الأعمدة التي تحتوي على قيم سالبة
print(negative_values)

# إزالة القيم المتطرفة في استهلاك الكافيين
df = df[df['Caffeine_Intake_mg'] <= 1000]  # إزالة القيم الكبيرة جدًا (حد منطقي)

# التحقق من القيم غير المنطقية في ساعات استخدام الأجهزة الإلكترونية
df = df[df['Electronic_Use_before_Bed_hrs'] >= 0]  # إزالة القيم السالبة

# التحقق من القيم السالبة في جميع الأعمدة
negative_values = (df < 0).any()

# عرض الأعمدة التي تحتوي على قيم سالبة
print(negative_values)

# تصحيح أوقات الاستيقاظ التي تتجاوز 24 ساعة
df['Wakeup_Hour'] = df['Wakeup_Hour'] % 24

print(df.describe())
print('------------------------------------------------------------------------')
print(df.isnull().sum())

"""** (Exploratory Data Analysis)**"""

plt.figure(figsize=(10,4))
plt.scatter(df['Sleep_Hours'], df['Daily_Productivity_Score'], color='blue')
plt.title('Relationship between Sleep Hours and Productivity')
plt.xlabel('Hours of Sleep')
plt.ylabel('Productivity Score')
plt.show()

plt.figure(figsize=(10,4))
plt.scatter(df['Electronic_Use_before_Bed_hrs'], df['Daily_Productivity_Score'], color='blue')
plt.title('Relationship between Electronic_Use_before_Bed_hrs and Productivity')
plt.xlabel('Electronic_Use_before_Bed_hrs')
plt.ylabel('Productivity Score')
plt.show()

# توزيع عدد ساعات النوم
plt.hist(df['Sleep_Hours'], bins=15, color='green')
plt.title('Distribution of Sleep Hours')
plt.xlabel('Hours of Sleep')
plt.ylabel('Frequency')
plt.show()

# توزيع درجات الإنتاجية
plt.hist(df['Daily_Productivity_Score'], bins=10, color='orange')
plt.title('Distribution of Productivity Scores')
plt.xlabel('Productivity Score')
plt.ylabel('Frequency')
plt.show()

df.plot(x='Caffeine_Intake_mg', y='Daily_Productivity_Score',kind='scatter',color='red')
plt.title('Relationship between Caffeine Intake and Productivity')
plt.xlabel('Caffeine Intake (mg)')
plt.ylabel('Productivity Score')
plt.show()

correlation_matrix = df.corr()

import seaborn as sns
plt.figure(figsize=(6,4))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm')
plt.title('Correlation Matrix')
plt.show()

sq = df.groupby('Sleep_Quality')['Sleep_Hours'].mean()
sq.plot(kind='bar', color='green')
plt.title('Average Sleep_Hours by Sleep Quality')
plt.ylabel('Average Sleep_Hours')

avg = df.groupby('Sleep_Quality')['Daily_Productivity_Score'].mean()
avg.plot(kind='bar', color='red')
plt.ylabel('Productivity_Score')
plt.title('Average Productivity Score by Sleep Quality')

# حساب عدد الأشخاص الذين ينامون أقل من 6 ساعات
less_than_6_hours = df[df['Sleep_Hours'] < 6].shape[0]
print(f"Number of people who sleep less than 6 hours: {less_than_6_hours}")

# استعراض عددالأشخاص الذين يتناولون أكثر من 400 ملغ من الكافيين
high_caffeine_consumers = df[df['Caffeine_Intake_mg'] > 400].shape[0]
print(f'Number of people who consume more than 400 mg of caffeine: {high_caffeine_consumers} ')

# حساب عدد الأشخاص الذين يتناولون أكثر من 400 ملغ من الكافيين
high_caffeine_consumers = df[df['Caffeine_Intake_mg'] > 400].shape[0]

# إجمالي عدد الأشخاص في البيانات
total_people = df.shape[0]

# البيانات لرسم Pie Chart
labels = ['> 400 mg Caffeine', 'Others']
sizes = [high_caffeine_consumers, total_people - high_caffeine_consumers]
colors = ['orange', 'lightblue']

# رسم Pie Chart
plt.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)
plt.title('Percentage of People Consuming More than 400 mg of Caffeine')
plt.axis('equal')
plt.show()

# حساب متوسط الإنتاجية للأشخاص الذين ينامون أكثر من 8 ساعات
average_productivity_more_than_8_hours = df[df['Sleep_Hours'] > 8]['Daily_Productivity_Score'].mean()
print(f"Average productivity for people who sleep more than 8 hours: {average_productivity_more_than_8_hours}")

# استعراض أعلى 5 أشخاص من حيث استهلاك الكافيين
top_5_caffeine_consumers = df[['Caffeine_Intake_mg', 'Sleep_Hours', 'Daily_Productivity_Score']].sort_values(by='Caffeine_Intake_mg', ascending=False).head(5)
print(top_5_caffeine_consumers)

# حساب معامل الارتباط بين ساعات النوم والإنتاجية
correlation_sleep_productivity = df['Sleep_Hours'].corr(df['Daily_Productivity_Score'])
print(f"Correlation between Sleep Hours and Productivity: {correlation_sleep_productivity}")

# استعراض الأشخاص الذين يستخدمون الأجهزة الإلكترونية قبل النوم لأكثر من ساعتين
long_electronic_use = df[df['Electronic_Use_before_Bed_hrs'] > 2].shape[0]
print(long_electronic_use)

# حساب متوسط جودة النوم للأشخاص الذين يتناولون أقل من 100 ملغ من الكافيين
average_sleep_quality_low_caffeine = df[df['Caffeine_Intake_mg'] < 100]['Sleep_Quality'].mean()
print(f"Average Sleep Quality for people consuming less than 100mg of caffeine: {average_sleep_quality_low_caffeine}")

# حساب عدد الأشخاص الذين لديهم جودة نوم أعلى من 4 وإنتاجية أكثر من 8
high_quality_and_high_productivity = df[(df['Sleep_Quality'] > 4) & (df['Daily_Productivity_Score'] > 8)].shape[0]

# عرض النتيجة
print(f"Number of people with Sleep Quality > 4 and Productivity Score > 8: {high_quality_and_high_productivity}")

# حساب متوسط عدد ساعات استخدام الأجهزة الإلكترونية قبل النوم للأشخاص الذين ينامون أقل من 6 ساعات
average_electronics_use_less_than_6_hours = df[df['Sleep_Hours'] < 6]['Electronic_Use_before_Bed_hrs'].mean()
print(f"Average Electronic Use for people who sleep less than 6 hours: {average_electronics_use_less_than_6_hours}")

er=df[(df['Sleep_Hours'] > 5 ) & (df['Sleep_Quality'] < 4 )][['Sleep_Quality','Sleep_Hours']]

er.groupby('Sleep_Quality')['Sleep_Hours'].mean()

plt.figure(figsize=(8,4))
plt.hist(er['Sleep_Quality'],bins=10, color='purple')
plt.title('Distribution of Sleep Quality < 4')
plt.xlabel('Sleep Quality')
plt.ylabel('Frequency')
plt.show()

